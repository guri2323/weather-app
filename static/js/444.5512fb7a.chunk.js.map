{"version":3,"file":"static/js/444.5512fb7a.chunk.js","mappings":"qKASA,MA2CA,EA3CaA,KACX,MAAM,SACJC,EAAQ,aACRC,EAAY,MACZC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MACEC,GAAWC,EAAAA,EAAAA,MAKjB,OAEEC,EAAAA,EAAAA,MAAA,QAAMC,SAAUR,GANuBS,GAASJ,EAAS,eAMlBK,SAAA,EAErCH,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kBAAiBD,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,SAAOD,UAAU,aAAYD,SAAC,gBAC9BE,EAAAA,EAAAA,KAAA,SACED,UAAU,gBACNZ,EAAS,WAAY,CAAEc,UAAU,SAGxCV,EAAOW,WAAYF,EAAAA,EAAAA,KAAA,QAAAF,SAAM,wBAG1BH,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kBAAiBD,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,SAAOD,UAAU,aAAYD,SAAC,eAC9BE,EAAAA,EAAAA,KAAA,SACED,UAAU,aACVI,KAAK,cACDhB,EAAS,WAAY,CAAEc,UAAU,SAKxCV,EAAOa,WAAYJ,EAAAA,EAAAA,KAAA,QAAAF,SAAM,uBAE1BE,EAAAA,EAAAA,KAAA,SAAOG,KAAK,SAASE,MAAM,YACtB,C","sources":["components/Form/Form.tsx"],"sourcesContent":["import { useForm, SubmitHandler } from \"react-hook-form\";\nimport \"./Form.css\";\nimport { useNavigate } from \"react-router-dom\";\n\ntype Inputs = {\n  userName: string;\n  password: string;\n};\n\nconst Form = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm<Inputs>();\n  const navigate = useNavigate();\n  const onSubmit: SubmitHandler<Inputs> = (data) => navigate(\"/products\");\n\n  //   console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <div className=\"input-container\">\n        <label className=\"form-label\">User Name:</label>\n        <input\n          className=\"form-input\"\n          {...register(\"userName\", { required: true })}\n        />\n      </div>\n      {errors.userName && <span>User Name is admin</span>}\n\n      {/* include validation with required or other standard HTML validation rules */}\n      <div className=\"input-container\">\n        <label className=\"form-label\">Password:</label>\n        <input\n          className=\"form-input\"\n          type=\"password\"\n          {...register(\"password\", { required: true })}\n        />\n      </div>\n\n      {/* errors will return when field validation fails  */}\n      {errors.password && <span>Password is admin</span>}\n\n      <input type=\"submit\" value=\"Login\" />\n    </form>\n  );\n};\n\nexport default Form;\n"],"names":["Form","register","handleSubmit","watch","formState","errors","useForm","navigate","useNavigate","_jsxs","onSubmit","data","children","className","_jsx","required","userName","type","password","value"],"sourceRoot":""}