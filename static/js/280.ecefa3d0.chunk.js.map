{"version":3,"file":"static/js/280.ecefa3d0.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.tsx","components/Weather/CityName/CityName.tsx","components/CurrentDate/CurrentDate.tsx","utils/getCurrentDate.ts","components/Weather/Humidity/Humidity.tsx","components/Weather/WindSpeed/WindSpeed.tsx","components/Weather/WeatherInfo/WeatherInfo.tsx","utils/fetchWeatherData.ts","components/Weather/WeatherDescription/WeatherDescription.tsx","components/Weather/Temperature/Temperature.tsx","components/Weather/Weather.tsx"],"sourcesContent":["import \"./SearchBox.css\";\n\ninterface SearchBoxProps {\n  search: string;\n  setSearch: (search: string) => void;\n  handleSearch: () => void;\n}\nconst SearchBox = ({ search, setSearch, handleSearch }: SearchBoxProps) => {\n  return (\n    <div className=\"search-engine\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter City Name\"\n        name=\"search\"\n        value={search}\n        onChange={(event) => setSearch(event.target.value)}\n        onKeyDown={(event) => {\n          if (event.key === \"Enter\") {\n            handleSearch();\n          }\n        }}\n      />\n      <button onClick={handleSearch}>Search</button>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import \"./CityName.css\";\n\nconst CityName = ({ weatherData }: Record<any, any>) => {\n  return (\n    <div className=\"city-name\">\n      <h2>\n        {weatherData?.name}, <span>{weatherData?.sys?.country}</span>\n      </h2>\n    </div>\n  );\n};\n\nexport default CityName;\n","import { getCurrentDate } from \"../../utils\";\nimport \"./CurrentDate.css\";\n\nconst CurrentDate = () => {\n  return (\n    <div className=\"date\">\n      <span>{getCurrentDate()}</span>\n    </div>\n  );\n};\n\nexport default CurrentDate;\n","export const getCurrentDate = () => {\n  return new Date().toLocaleDateString(\"en-ca\", {\n    weekday: \"long\",\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n};\n","import \"./Humidity.css\";\n\nconst Humidity = ({ weatherData }: Record<any, any>) => {\n  return (\n    <div>\n      <p className=\"humidity\">{weatherData?.main?.humidity}%</p>\n      <p>Humidity</p>\n    </div>\n  );\n};\n\nexport default Humidity;\n","import \"./WindSpeed.css\";\n\nconst WindSpeed = ({ weatherData }: Record<any, any>) => {\n  return (\n    <div>\n      <p className=\"wind\">{weatherData?.wind?.speed}</p>\n      <p>Wind Speed</p>\n    </div>\n  );\n};\n\nexport default WindSpeed;\n","import Humidity from \"../Humidity/Humidity\";\nimport WindSpeed from \"../WindSpeed/WindSpeed\";\nimport \"./WeatherInfo.css\";\n\nconst WeatherInfo = ({ weatherData }: Record<any, any>) => {\n  return (\n    <div className=\"weather-info\">\n      <div className=\"column\">\n        <WindSpeed weatherData={weatherData} />\n      </div>\n      <div className=\"column\">\n        <Humidity weatherData={weatherData} />\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherInfo;\n","export const fetchWeatherData = async (\n  param: string,\n  setWeatherData: React.Dispatch<\n    React.SetStateAction<Record<any, any> | undefined>\n  >,\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  setLoading(true);\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${param}&appid=e34b4c51d8c2b7bf48d5217fe52ff79e`\n    );\n\n    const data = await response.json();\n    if (data) {\n      setWeatherData(data);\n      setLoading(false);\n    }\n  } catch (e) {\n    setLoading(false);\n    console.log(e);\n  }\n};\n","import \"./WeatherDescription.css\";\n\nconst WeatherDescription = ({ weatherData }: Record<any, any>) => {\n  return (\n    <div className=\"description\">\n      {weatherData?.weather?.[0]?.description?.toUpperCase() ?? \"\"}\n    </div>\n  );\n};\n\nexport default WeatherDescription;\n","import \"./Temperature.css\";\n\nconst Temperature = ({ weatherData }: Record<any, any>) => {\n  return <div className=\"temperature\">{weatherData?.main?.temp} F</div>;\n};\n\nexport default Temperature;\n","import { useCallback, useEffect, useState } from \"react\";\nimport SearchBox from \"../SearchBox/SearchBox\";\nimport Loader from \"../Loader/Loader\";\nimport CityName from \"./CityName/CityName\";\nimport CurrentDate from \"../CurrentDate/CurrentDate\";\nimport WeatherInfo from \"./WeatherInfo/WeatherInfo\";\nimport { fetchWeatherData } from \"../../utils\";\nimport WeatherDescription from \"./WeatherDescription/WeatherDescription\";\nimport Temperature from \"./Temperature/Temperature\";\nimport \"./Weather.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Weather = () => {\n  const [search, setSearch] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [weatherData, setWeatherData] = useState<Record<any, any>>();\n  const navigate = useNavigate();\n\n  const handleSearch = useCallback(\n    async () => fetchWeatherData(search, setWeatherData, setLoading),\n    [search]\n  );\n\n  useEffect(() => {\n    fetchWeatherData(\"Toronto\", setWeatherData, setLoading);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <SearchBox\n        search={search}\n        setSearch={setSearch}\n        handleSearch={handleSearch}\n      />\n      {loading ? (\n        <Loader />\n      ) : (\n        <div>\n          <CityName weatherData={weatherData} />\n          <CurrentDate />\n          <Temperature weatherData={weatherData} />\n          <WeatherDescription weatherData={weatherData} />\n          <WeatherInfo weatherData={weatherData} />\n        </div>\n      )}\n      <button className=\"back-button\" onClick={() => navigate(\"/products\")}>\n        Back to Products\n      </button>\n    </div>\n  );\n};\n\nexport default Weather;\n"],"names":["_ref","search","setSearch","handleSearch","_jsxs","className","children","_jsx","type","placeholder","name","value","onChange","event","target","onKeyDown","key","onClick","_weatherData$sys","weatherData","sys","country","CurrentDate","Date","toLocaleDateString","weekday","month","day","year","_weatherData$main","main","humidity","_weatherData$wind","wind","speed","WindSpeed","Humidity","fetchWeatherData","async","param","setWeatherData","setLoading","response","fetch","data","json","e","console","log","_weatherData$weather$","_weatherData$weather","_weatherData$weather$2","_weatherData$weather$3","weather","description","toUpperCase","temp","Weather","useState","loading","navigate","useNavigate","useCallback","useEffect","SearchBox","Loader","CityName","Temperature","WeatherDescription","WeatherInfo"],"sourceRoot":""}